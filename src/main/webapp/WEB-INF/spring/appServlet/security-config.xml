<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:security="http://www.springframework.org/schema/security"
       xmlns:context="http://www.springframework.org/schema/context"
       xsi:schemaLocation="http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security.xsd
                           http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
                           http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd">

    <bean id="passwordEncoder" class="org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder"/>
    <bean id="customUserDetailsService" class="org.threefour.homelearn.member.service.CustomUserDetailsService"/>
    <bean id="ajaxLoginFilter" class="org.threefour.homelearn.member.jwt.AjaxLoginFilter">
        <property name="filterProcessesUrl" value="/members/login-proc"/>
        <property name="authenticationManager" ref="authenticationManager"/>
    </bean>
    <bean id="logoutFilter" class="org.threefour.homelearn.member.jwt.CustomLogoutFilter"/>
    <bean id="jwtUtil" class="org.threefour.homelearn.member.jwt.JWTUtil"/>
    <bean id="jwtFilter" class="org.threefour.homelearn.member.jwt.JWTFilter"/>
    <bean id="ajaxAuthenticationProvider" class="org.threefour.homelearn.member.jwt.AjaxAuthenticationProvider"/>

    <bean id="daoAuthenticationProvider"
          class="org.springframework.security.authentication.dao.DaoAuthenticationProvider">
        <property name="userDetailsService" ref="customUserDetailsService"/>
        <property name="passwordEncoder" ref="passwordEncoder"/>
        <property name="hideUserNotFoundExceptions" value="false"/>
    </bean>

    <bean id="roleHierarchy" class="org.springframework.security.access.hierarchicalroles.RoleHierarchyImpl">
        <property name="hierarchy">
            <value>
                ROLE_ADMIN > ROLE_TEACHER
                ROLE_ADMIN > ROLE_MEMBER
            </value>
        </property>
    </bean>

    <bean id="expressionHandler"
          class="org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler">
        <property name="roleHierarchy" ref="roleHierarchy"/>
    </bean>

    <security:http pattern="/resources/**" security="none"/>

    <security:http pattern="/admin/dash-board">
        <security:intercept-url pattern="/admin/dash-board" access="hasRole('ADMIN')"/>
        <security:http-basic/>
    </security:http>

    <security:http auto-config="true" use-expressions="true">
        <security:csrf disabled="true"/>
        <security:intercept-url pattern="/courseForm.do" access="hasRole('TEACHER')"/>
        <security:intercept-url pattern="/members/mypage" access="hasRole('MEMBER')"/>
        <security:intercept-url pattern="/files/**" access="hasRole('MEMBER')"/>
        <security:intercept-url pattern="/get-info" access="hasRole('MEMBER')"/>
        <security:intercept-url pattern="/**" access="permitAll()"/>

        <security:form-login
                username-parameter="username"
                password-parameter="password"
                login-page="/members/login"
                login-processing-url="/members/login-proc"
                always-use-default-target="false"
        />
        <security:logout logout-url="/members/logout"
                         delete-cookies="refreshToken"
                         logout-success-url="/"/>
        <security:custom-filter after="CAS_FILTER" ref="jwtFilter"/>
        <security:custom-filter before="FORM_LOGIN_FILTER" ref="ajaxLoginFilter"/>
        <security:custom-filter before="CSRF_FILTER" ref="logoutFilter"/>
    </security:http>

    <context:property-placeholder location="/resources/application.properties"/>

    <security:authentication-manager alias="authenticationManager">
        <security:authentication-provider ref="ajaxAuthenticationProvider"/>
        <security:authentication-provider ref="daoAuthenticationProvider"/>
    </security:authentication-manager>

    <security:global-method-security pre-post-annotations="enabled">
        <security:expression-handler ref="expressionHandler"/>
    </security:global-method-security>

</beans>
